<!DOCTYPE html><html lang="en" class="h-full"><head><meta charSet="utf-8"/><title>Getting started with Liquid and Theme Sections</title><meta name="description" content="Make customizations to Shopify themes using Liquid and create a new custom content section."/><meta name="viewport" content="width=device-width,initial-scale=1"/><meta property="og:type" content="website"/><meta property="og:image" content="https://workshops.shopify.dev/social-share-preview.jpg"/><meta name="twitter:card" content="summary_large_image"/><meta name="twitter:image" content="https://workshops.shopify.dev/social-share-preview.jpg"/><meta name="twitter:creator" content="@ShopifyDevs"/><link rel="stylesheet" href="/build/_assets/tailwind-OSF3KDF6.css"/><link rel="stylesheet" href="/build/_assets/workshops-IXG5EJLE.css"/><link rel="stylesheet" href="/build/_assets/agate-YFU2QRW6.css"/></head><body class="h-full bg-slate-50"><script async="" src="https://www.googletagmanager.com/gtag/js?id=G-86JJCZ26ZM"></script><script async="" id="gtag-init">
                window.dataLayer = window.dataLayer || [];
                function gtag(){dataLayer.push(arguments);}
                gtag('js', new Date());
              </script><main><div class="workshop flex h-full w-full flex-row justify-between gap-0"><header class="fixed top-0 left-0 right-0 z-[2] flex flex-row-reverse items-center justify-end bg-white p-4 drop-shadow-md md:justify-between"><div class="hidden md:block timer"><p>45<!-- --> minutes remaining</p></div><h1>Getting started with Liquid and Theme Sections</h1><button class="btn-icon md:hidden" aria-label="Open step navigation"> <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="h-6 w-6"><path fill-rule="evenodd" d="M3 6.75A.75.75 0 013.75 6h16.5a.75.75 0 010 1.5H3.75A.75.75 0 013 6.75zM3 12a.75.75 0 01.75-.75h16.5a.75.75 0 010 1.5H3.75A.75.75 0 013 12zm0 5.25a.75.75 0 01.75-.75h16.5a.75.75 0 010 1.5H3.75a.75.75 0 01-.75-.75z" clip-rule="evenodd"></path></svg></button><a class="btn-icon hidden md:block" arial-label="Go back to workshops" href="/"><svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="h-5 w-5"><path d="M19 9H3.661l5.997-5.246a1 1 0 00-1.316-1.506l-8 7c-.008.007-.011.018-.019.025a.975.975 0 00-.177.24c-.018.03-.045.054-.059.087a.975.975 0 000 .802c.014.033.041.057.059.088.05.087.104.17.177.239.008.007.011.018.019.025l8 7a.996.996 0 001.411-.095 1 1 0 00-.095-1.411L3.661 11H19a1 1 0 000-2z"></path></svg></a></header>
<div class="workshop-nav flex shrink-0 flex-col gap-2 bg-slate-50"><a class="flex select-none items-center rounded-md px-4 pb-2 leading-snug md:hidden" href="/"><svg width="8.4" height="12" viewBox="0 0 7 10" fill="none" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.30326 0.403358C5.108 0.208096 4.79142 0.208096 4.59615 0.403358L1.06062 3.93889L0.353513 4.646C0.158251 4.84126 0.158251 5.15784 0.353513 5.35311L1.06062 6.06021L4.59615 9.59575C4.79142 9.79101 5.108 9.79101 5.30326 9.59575L6.01037 8.88864C6.20563 8.69338 6.20563 8.37679 6.01037 8.18153L2.82839 4.99955L6.01037 1.81757C6.20563 1.62231 6.20563 1.30573 6.01037 1.11046L5.30326 0.403358Z" fill="currentColor"></path></svg><span class="pl-2">Workshops</span></a><hr class="md:hidden"/><div class="flex select-none items-center rounded-md py-4 px-4 leading-snug md:hidden timer"><p>45<!-- --> minutes remaining</p></div><a href="#0" class="flex select-none items-center rounded-md border border-solid border-gray-200 bg-white py-4 px-4 leading-snug font-medium"><span class="mr-4 flex h-6 w-6 flex-none items-center justify-center rounded-full  text-[0.8rem] leading-6 text-white bg-emerald-500">1</span>Before you begin</a><a href="#1" class="flex select-none items-center rounded-md border border-solid border-gray-200 bg-white py-4 px-4 leading-snug "><span class="mr-4 flex h-6 w-6 flex-none items-center justify-center rounded-full  text-[0.8rem] leading-6 text-white bg-slate-400">2</span>Test your development environment</a><a href="#2" class="flex select-none items-center rounded-md border border-solid border-gray-200 bg-white py-4 px-4 leading-snug "><span class="mr-4 flex h-6 w-6 flex-none items-center justify-center rounded-full  text-[0.8rem] leading-6 text-white bg-slate-400">3</span>Adding a new section file</a><a href="#3" class="flex select-none items-center rounded-md border border-solid border-gray-200 bg-white py-4 px-4 leading-snug "><span class="mr-4 flex h-6 w-6 flex-none items-center justify-center rounded-full  text-[0.8rem] leading-6 text-white bg-slate-400">4</span>Creating a section setting</a><a href="#4" class="flex select-none items-center rounded-md border border-solid border-gray-200 bg-white py-4 px-4 leading-snug "><span class="mr-4 flex h-6 w-6 flex-none items-center justify-center rounded-full  text-[0.8rem] leading-6 text-white bg-slate-400">5</span>Adding a Custom Liquid block to our section</a><a href="#5" class="flex select-none items-center rounded-md border border-solid border-gray-200 bg-white py-4 px-4 leading-snug "><span class="mr-4 flex h-6 w-6 flex-none items-center justify-center rounded-full  text-[0.8rem] leading-6 text-white bg-slate-400">6</span>Creating a custom text block</a><a href="#6" class="flex select-none items-center rounded-md border border-solid border-gray-200 bg-white py-4 px-4 leading-snug "><span class="mr-4 flex h-6 w-6 flex-none items-center justify-center rounded-full  text-[0.8rem] leading-6 text-white bg-slate-400">7</span>Testing the custom Liquid block on different pages</a><a href="#7" class="flex select-none items-center rounded-md border border-solid border-gray-200 bg-white py-4 px-4 leading-snug "><span class="mr-4 flex h-6 w-6 flex-none items-center justify-center rounded-full  text-[0.8rem] leading-6 text-white bg-slate-400">8</span>Displaying product tags via the custom Liquid block</a><a href="#8" class="flex select-none items-center rounded-md border border-solid border-gray-200 bg-white py-4 px-4 leading-snug "><span class="mr-4 flex h-6 w-6 flex-none items-center justify-center rounded-full  text-[0.8rem] leading-6 text-white bg-slate-400">9</span>Displaying metafields via the custom Liquid block</a><a href="#9" class="flex select-none items-center rounded-md border border-solid border-gray-200 bg-white py-4 px-4 leading-snug "><span class="mr-4 flex h-6 w-6 flex-none items-center justify-center rounded-full  text-[0.8rem] leading-6 text-white bg-slate-400">10</span>Pushing changes up to a live Shopify store</a><a href="#10" class="flex select-none items-center rounded-md border border-solid border-gray-200 bg-white py-4 px-4 leading-snug "><span class="mr-4 flex h-6 w-6 flex-none items-center justify-center rounded-full  text-[0.8rem] leading-6 text-white bg-slate-400">11</span>Conclusion</a></div><div class="backdrop fixed inset-0"></div>
<div class="slider-wrapper"><div class="slider-panel"><div class="workshop-step"><section><h2 id="0">Before you begin</h2><p>This codelab is for developers looking to learn how to work with Liquid and make customizations to existing themes. In this workshop, we&#x27;ll show you how to create a theme section, work with blocks, and enhance themes by implementing new features. We&#x27;ll also explore how our new interactive <a href="https://shopify.dev/api/liquid">Liquid documentation</a> makes it easier for you to learn how to leverage Liquid.</p><p>By the end of the this codelab you&#x27;ll build a section which will look like this:</p><p><img src="/content/images/learning-liquid/finished-section.gif" alt="finished-section"/></p><h3>What you’ll learn</h3><ul>
<li>How to use Liquid to customize and enhance sections of a Shopify theme.</li>
<li>How to test and preview changes to themes in a local development environment.</li>
<li>How to create new input settings for a theme section.</li>
<li>How to push changes up to a live Shopify store.</li>
</ul><h3>What you&#x27;ll need</h3><ul>
<li>A Shopify Partners account. If you don’t have one, you can create a <a href="https://partners.shopify.com/signup">free Shopify partner account here</a>.</li>
<li>A development store with demo products. If you don’t have a development store, create a new <a href="https://shopify.dev/docs/apps/tools/development-stores#create-a-development-store-to-test-your-app">development store with pre-populated data</a>.</li>
<li>The Shopify CLI installed and configured to be connected to their development store. If you don&#x27;t have the Shopify CLI installed and configured you can learn how to set up the Shopify CLI in <a href="https://shopify.dev/themes/tools/cli/getting-started#install-shopify-cli">our developer docs</a>.</li>
<li>The <a href="https://github.com/Shopify/dawn">Dawn theme</a> downloaded onto your computer. You can use the <code>shopify theme init</code> Shopify CLI commands to download Dawn onto your computer.</li>
<li>A text editor such as VS Code, or Sublime for editing theme files.</li>
<li>Basic experience in HTML, CSS, JSON, and Liquid is required for this Codelab.</li>
</ul><aside class="callout callout-positive border-green-500 bg-green-50 rounded-md border-l-4  p-4"><dt>Positive</dt><dd>To view a completed theme for this workshop, check out <a href="https://github.com/Shopify/unite-workshop-learning-liquid">this repo</a>.</dd></aside></section></div></div><div class="slider-controls"><button class="slider-control btn btn-small btn-tertiary-outline prev shadow-md invisible" disabled="">Back</button><button class="slider-control btn btn-small btn-tertiary next shadow-md ">Next</button></div></div></div></main><script>((STORAGE_KEY, restoreKey) => {
    if (!window.history.state || !window.history.state.key) {
      let key = Math.random().toString(32).slice(2);
      window.history.replaceState({
        key
      }, "");
    }
    try {
      let positions = JSON.parse(sessionStorage.getItem(STORAGE_KEY) || "{}");
      let storedY = positions[restoreKey || window.history.state.key];
      if (typeof storedY === "number") {
        window.scrollTo(0, storedY);
      }
    } catch (error) {
      console.error(error);
      sessionStorage.removeItem(STORAGE_KEY);
    }
  })("positions", null)</script><link rel="modulepreload" href="/build/entry.client-J6TYPMOL.js"/><link rel="modulepreload" href="/build/_shared/chunk-YZBVNK3V.js"/><link rel="modulepreload" href="/build/_shared/chunk-SH7JW3YP.js"/><link rel="modulepreload" href="/build/_shared/chunk-GDLBX7ER.js"/><link rel="modulepreload" href="/build/_shared/chunk-Q3IECNXJ.js"/><link rel="modulepreload" href="/build/_shared/chunk-JOBPDGDE.js"/><link rel="modulepreload" href="/build/_shared/chunk-MV3Y6IQI.js"/><link rel="modulepreload" href="/build/root-TS7GWK7I.js"/><link rel="modulepreload" href="/build/routes/workshops-YWZAAF22.js"/><link rel="modulepreload" href="/build/_shared/chunk-4QTFVEPO.js"/><link rel="modulepreload" href="/build/routes/workshops/$workshopId-TCVFMZD7.js"/><script>window.__remixContext = {"url":"/workshops/learning-liquid","state":{"loaderData":{"root":{"trackingEnabled":true},"routes/workshops/$workshopId":{"workshopId":"learning-liquid","code":"var Component=(()=\u003e{var p=Object.create;var l=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var w=(t,e)=\u003e()=\u003e(e||t((e={exports:{}}).exports,e),e.exports),y=(t,e)=\u003e{for(var i in e)l(t,i,{get:e[i],enumerable:!0})},c=(t,e,i,a)=\u003e{if(e\u0026\u0026typeof e==\"object\"||typeof e==\"function\")for(let s of m(e))!f.call(t,s)\u0026\u0026s!==i\u0026\u0026l(t,s,{get:()=\u003ee[s],enumerable:!(a=u(e,s))||a.enumerable});return t};var j=(t,e,i)=\u003e(i=t!=null?p(g(t)):{},c(e||!t||!t.__esModule?l(i,\"default\",{value:t,enumerable:!0}):i,t)),b=t=\u003ec(l({},\"__esModule\",{value:!0}),t);var h=w((x,o)=\u003e{o.exports=_jsx_runtime});var q={};y(q,{default:()=\u003ek,frontmatter:()=\u003eN});var n=j(h()),N={summary:\"Make customizations to Shopify themes using Liquid and create a new custom content section.\",id:\"learning-liquid\",status:\"Published\",\"feedback-link\":\"https://github.com/Shopify/workshops\",categories:\"liquid\"};function d(t){let e=Object.assign({timer:\"timer\",h1:\"h1\",nav:\"nav\",\"workshop-steps\":\"workshop-steps\",div:\"div\",section:\"section\",h2:\"h2\",p:\"p\",a:\"a\",img:\"img\",h3:\"h3\",ul:\"ul\",li:\"li\",code:\"code\",dl:\"dl\",dt:\"dt\",dd:\"dd\",pre:\"pre\",span:\"span\",strong:\"strong\"},t.components),i=e[\"workshop-steps\"],{WorkshopHeader:a,WorkshopNavLink:s}=e;return a||r(\"WorkshopHeader\",!0),s||r(\"WorkshopNavLink\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(a,{children:[(0,n.jsx)(e.timer,{cssClass:\"hidden md:block\",children:'{\"total\":45,\"stepsDuration\":{\"1\":3,\"2\":5,\"3\":5,\"5\":5,\"6\":5,\"7\":5,\"8\":5,\"9\":5,\"10\":5,\"11\":2},\"countDown\":[]}'}),(0,n.jsx)(e.h1,{children:\"Getting started with Liquid and Theme Sections\"})]}),`\n`,(0,n.jsxs)(e.nav,{children:[(0,n.jsx)(e.timer,{cssClass:\"flex select-none items-center rounded-md py-4 px-4 leading-snug md:hidden\",children:'{\"total\":45,\"stepsDuration\":{\"1\":3,\"2\":5,\"3\":5,\"5\":5,\"6\":5,\"7\":5,\"8\":5,\"9\":5,\"10\":5,\"11\":2},\"countDown\":[]}'}),(0,n.jsx)(s,{stepStr:\"0\",children:\"Before you begin\"}),(0,n.jsx)(s,{stepStr:\"1\",children:\"Test your development environment\"}),(0,n.jsx)(s,{stepStr:\"2\",children:\"Adding a new section file\"}),(0,n.jsx)(s,{stepStr:\"3\",children:\"Creating a section setting\"}),(0,n.jsx)(s,{stepStr:\"4\",children:\"Adding a Custom Liquid block to our section\"}),(0,n.jsx)(s,{stepStr:\"5\",children:\"Creating a custom text block\"}),(0,n.jsx)(s,{stepStr:\"6\",children:\"Testing the custom Liquid block on different pages\"}),(0,n.jsx)(s,{stepStr:\"7\",children:\"Displaying product tags via the custom Liquid block\"}),(0,n.jsx)(s,{stepStr:\"8\",children:\"Displaying metafields via the custom Liquid block\"}),(0,n.jsx)(s,{stepStr:\"9\",children:\"Pushing changes up to a live Shopify store\"}),(0,n.jsx)(s,{stepStr:\"10\",children:\"Conclusion\"})]}),`\n`,(0,n.jsxs)(i,{children:[(0,n.jsx)(e.div,{className:\"workshop-step\",children:(0,n.jsxs)(e.section,{children:[(0,n.jsx)(e.h2,{id:\"0\",children:\"Before you begin\"}),(0,n.jsxs)(e.p,{children:[\"This codelab is for developers looking to learn how to work with Liquid and make customizations to existing themes. In this workshop, we'll show you how to create a theme section, work with blocks, and enhance themes by implementing new features. We'll also explore how our new interactive \",(0,n.jsx)(e.a,{href:\"https://shopify.dev/api/liquid\",children:\"Liquid documentation\"}),\" makes it easier for you to learn how to leverage Liquid.\"]}),(0,n.jsx)(e.p,{children:\"By the end of the this codelab you'll build a section which will look like this:\"}),(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"/content/images/learning-liquid/finished-section.gif\",alt:\"finished-section\"})}),(0,n.jsx)(e.h3,{children:\"What you\\u2019ll learn\"}),(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"How to use Liquid to customize and enhance sections of a Shopify theme.\"}),`\n`,(0,n.jsx)(e.li,{children:\"How to test and preview changes to themes in a local development environment.\"}),`\n`,(0,n.jsx)(e.li,{children:\"How to create new input settings for a theme section.\"}),`\n`,(0,n.jsx)(e.li,{children:\"How to push changes up to a live Shopify store.\"}),`\n`]}),(0,n.jsx)(e.h3,{children:\"What you'll need\"}),(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"A Shopify Partners account. If you don\\u2019t have one, you can create a \",(0,n.jsx)(e.a,{href:\"https://partners.shopify.com/signup\",children:\"free Shopify partner account here\"}),\".\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"A development store with demo products. If you don\\u2019t have a development store, create a new \",(0,n.jsx)(e.a,{href:\"https://shopify.dev/docs/apps/tools/development-stores#create-a-development-store-to-test-your-app\",children:\"development store with pre-populated data\"}),\".\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"The Shopify CLI installed and configured to be connected to their development store. If you don't have the Shopify CLI installed and configured you can learn how to set up the Shopify CLI in \",(0,n.jsx)(e.a,{href:\"https://shopify.dev/themes/tools/cli/getting-started#install-shopify-cli\",children:\"our developer docs\"}),\".\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"The \",(0,n.jsx)(e.a,{href:\"https://github.com/Shopify/dawn\",children:\"Dawn theme\"}),\" downloaded onto your computer. You can use the \",(0,n.jsx)(e.code,{children:\"shopify theme init\"}),\" Shopify CLI commands to download Dawn onto your computer.\"]}),`\n`,(0,n.jsx)(e.li,{children:\"A text editor such as VS Code, or Sublime for editing theme files.\"}),`\n`,(0,n.jsx)(e.li,{children:\"Basic experience in HTML, CSS, JSON, and Liquid is required for this Codelab.\"}),`\n`]}),(0,n.jsxs)(e.dl,{children:[(0,n.jsx)(e.dt,{children:\"Positive\"}),(0,n.jsxs)(e.dd,{children:[\"To view a completed theme for this workshop, check out \",(0,n.jsx)(e.a,{href:\"https://github.com/Shopify/unite-workshop-learning-liquid\",children:\"this repo\"}),\".\"]})]})]})}),(0,n.jsx)(e.div,{className:\"workshop-step\",children:(0,n.jsxs)(e.section,{children:[(0,n.jsx)(e.h2,{id:\"1\",children:\"Test your development environment\"}),(0,n.jsxs)(e.p,{children:[\"Before we start adding any new components to our theme, we need to first test that our development environment is working and connected correctly using the Shopify CLI. If you don't already have a theme project directory on your computer, download the most recent version of the \",(0,n.jsx)(e.a,{href:\"https://github.com/Shopify/dawn\",children:\"Dawn theme\"}),\" with \",(0,n.jsx)(e.code,{children:\"shopify theme init\"}),\", and start your local theme development server by opening your theme project file in terminal and running \",(0,n.jsx)(e.code,{children:\"shopify theme dev\"}),\".\"]}),(0,n.jsxs)(e.p,{children:['This command will sync the theme on your computer with the store connected using the Shopify CLI to generate a theme that can be interacted within a browser. This locally running theme is known as a \"development theme\" and you can learn more about their properties in ',(0,n.jsx)(e.a,{href:\"https://shopify.dev/themes/tools/cli#development-themes\",children:\"our developer documentation\"}),\".\"]}),(0,n.jsxs)(e.p,{children:[\"After you have run the \",(0,n.jsx)(e.code,{children:\"shopify theme dev\"}),\" command the CLI should return the following:\"]}),(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"A link to your development theme at \",(0,n.jsx)(e.code,{children:\"http://127.0.0.1:9292\"}),\".\"]}),`\n`,(0,n.jsx)(e.li,{children:\"A link to the editor for the theme in the Shopify admin (We'll be using this link to interact with the new section created during this codelab).\"}),`\n`,(0,n.jsx)(e.li,{children:\"A preview link that you can share with others.\"}),`\n`]}),(0,n.jsx)(e.p,{children:\"Next we can test that the locally running theme is working correctly by making a minor change to a theme file and observing that the change is being transferred to the development theme.\"}),(0,n.jsxs)(e.p,{children:[\"In your text editor, open the \",(0,n.jsx)(e.code,{children:\"theme.liquid\"}),\" layout file in the \",(0,n.jsx)(e.code,{children:\"/layout\"}),\" directory, and locate the \",(0,n.jsx)(e.code,{children:\"{% sections 'header-group' %}\"}),\" (or \",(0,n.jsx)(e.code,{children:\"{% section 'header' %}\"}),\") tag. On a new line below this tag, add the Liquid object \",(0,n.jsx)(e.code,{children:\"{{ template }}\"}),\" and save the change:\"]}),(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"hljs language-html\",children:`{% sections 'header-group' %}\n{{ template }}\n`})}),(0,n.jsxs)(e.dl,{children:[(0,n.jsx)(e.dt,{children:\"Positive\"}),(0,n.jsxs)(e.dd,{children:[\"This \",(0,n.jsx)(e.code,{children:\"template\"}),\" object has global scope and will output the name of the template that's currently being used to render a page of your Shopify store. You can learn about how Liquid objects access different resources from \",(0,n.jsx)(e.a,{href:\"https://shopify.dev/api/liquid/objects\",children:\"our developer documentation\"}),\" and you can also explore more information on the \",(0,n.jsx)(e.code,{children:\"template\"}),\" object specifically in our \",(0,n.jsx)(e.a,{href:\"https://shopify.dev/api/liquid/objects#template\",children:\"Liquid API documentation\"}),\".\"]})]}),(0,n.jsxs)(e.p,{children:[\"In your browser, navigate to \",(0,n.jsx)(e.code,{children:\"http://127.0.0.1:9292\"}),\". You should see \",(0,n.jsx)(e.code,{children:\"index\"}),\" appearing below the store menu, and when you navigate to another page you should see this text change to match the page that's being displayed.\"]}),(0,n.jsx)(e.p,{children:\"If you see a password page appear, you will need to enter the password found in the store admin in Online Store Preferences.\"}),(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"/content/images/learning-liquid/template.gif\",alt:\"testing-template\"})}),(0,n.jsxs)(e.dl,{children:[(0,n.jsx)(e.dt,{children:\"Negative\"}),(0,n.jsxs)(e.dd,{children:[\"If you're not seeing the \",(0,n.jsx)(e.code,{children:\"{{ template }}\"}),\" object outputting dynamic content, then you'll need to \",(0,n.jsx)(e.a,{href:\"https://shopify.dev/themes/tools/cli#more-help\",children:\"troubleshoot your configuration\"}),\".\"]})]})]})}),(0,n.jsx)(e.div,{className:\"workshop-step\",children:(0,n.jsxs)(e.section,{children:[(0,n.jsx)(e.h2,{id:\"2\",children:\"Adding a new section file\"}),(0,n.jsx)(e.p,{children:\"Now that we've established that our local development environment is running correctly, we can start building our new dynamic section which can be added to any page of a Shopify store.\"}),(0,n.jsxs)(e.p,{children:[\"Using your text-editor, navigate to the \",(0,n.jsx)(e.code,{children:\"/sections\"}),\" directory of your theme, where you'll find all the different sections that are contained within your theme.\"]}),(0,n.jsxs)(e.dl,{children:[(0,n.jsx)(e.dt,{children:\"Positive\"}),(0,n.jsx)(e.dd,{children:\"Sections are Liquid files that allow you to create reusable modules of content that can be customized by merchants. Section files can contain HTML, JSON, and Liquid to render dynamic content on a Shopify store.\"})]}),(0,n.jsxs)(e.p,{children:[\"We'll create a new file in this directory called \",(0,n.jsx)(e.code,{children:\"custom-content.liquid\"}),\".\"]}),(0,n.jsx)(e.p,{children:\"Inside this empty file we'll first populate the file with the basic schema information that's required for the theme editor to recognize and render the section:\"}),(0,n.jsx)(e.pre,{children:(0,n.jsxs)(e.code,{className:\"hljs language-json\",children:[(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\"{\"}),\"% schema %\",(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\"}\"}),`\n  `,(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\"{\"}),`\n    `,(0,n.jsx)(e.span,{className:\"hljs-attr\",children:'\"name\"'}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"hljs-string\",children:'\"Custom Content\"'}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\",\"}),`\n    `,(0,n.jsx)(e.span,{className:\"hljs-attr\",children:'\"settings\"'}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\",\"}),`\n    `,(0,n.jsx)(e.span,{className:\"hljs-attr\",children:'\"presets\"'}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\"[\"}),`\n      `,(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\"{\"}),`\n        `,(0,n.jsx)(e.span,{className:\"hljs-attr\",children:'\"name\"'}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"hljs-string\",children:'\"Custom Content\"'}),`\n      `,(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\"}\"}),`\n    `,(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\"]\"}),`\n  `,(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\"}\"}),`\n`,(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\"{\"}),\"% endschema %\",(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\"}\"}),`\n`]})}),(0,n.jsxs)(e.p,{children:[\"As you can see, within the Liquid \",(0,n.jsx)(e.code,{children:\"schema\"}),\" tags we're using JSON to define a section name, settings (which is empty for now) and presets. By adding these presets the section will be accessible using the theme editor.\"]}),(0,n.jsx)(e.p,{children:\"We'll also add some placeholder text above the schema tags so that we can see some demo content when we test out this basic section:\"}),(0,n.jsx)(e.pre,{children:(0,n.jsxs)(e.code,{className:\"hljs language-html\",children:[(0,n.jsxs)(e.span,{className:\"hljs-tag\",children:[\"\u003c\",(0,n.jsx)(e.span,{className:\"hljs-name\",children:\"p\"}),\"\u003e\"]}),\"Hello world\",(0,n.jsxs)(e.span,{className:\"hljs-tag\",children:[\"\u003c/\",(0,n.jsx)(e.span,{className:\"hljs-name\",children:\"p\"}),\"\u003e\"]}),`\n\n{% schema %}\n`]})}),(0,n.jsx)(e.p,{children:\"If we navigate to the URL generated by the CLI which allows us to customize the theme in the theme editor, we'll see that the section can be added to pages, but no settings will be available so far:\"}),(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"/content/images/learning-liquid/basic-section.gif\",alt:\"basic-section\"})})]})}),(0,n.jsx)(e.div,{className:\"workshop-step\",children:(0,n.jsxs)(e.section,{children:[(0,n.jsx)(e.h2,{id:\"3\",children:\"Creating a section setting\"}),(0,n.jsxs)(e.p,{children:[\"Now that the section is rendering correctly, we can add a text field setting that will act as the main heading for this section. In our \",(0,n.jsx)(e.code,{children:\"custom-content.liquid\"}),\" file, we can add a new array within the schema settings, with an \",(0,n.jsx)(e.code,{children:\"ID\"}),\", \",(0,n.jsx)(e.code,{children:\"type\"}),\", \",(0,n.jsx)(e.code,{children:\"label\"}),\" and \",(0,n.jsx)(e.code,{children:\"default\"}),\" placeholder:\"]}),(0,n.jsx)(e.pre,{children:(0,n.jsxs)(e.code,{className:\"hljs language-json\",children:[(0,n.jsx)(e.span,{className:\"hljs-attr\",children:'\"settings\"'}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\"[\"}),`\n  `,(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\"{\"}),`\n    `,(0,n.jsx)(e.span,{className:\"hljs-attr\",children:'\"type\"'}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"hljs-string\",children:'\"text\"'}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\",\"}),`\n    `,(0,n.jsx)(e.span,{className:\"hljs-attr\",children:'\"id\"'}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"hljs-string\",children:'\"title\"'}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\",\"}),`\n    `,(0,n.jsx)(e.span,{className:\"hljs-attr\",children:'\"label\"'}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"hljs-string\",children:'\"Custom content heading\"'}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\",\"}),`\n    `,(0,n.jsx)(e.span,{className:\"hljs-attr\",children:'\"default\"'}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"hljs-string\",children:'\"Title\"'}),`\n  `,(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\"}\"}),`\n`,(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\",\"}),`\n`]})}),(0,n.jsxs)(e.p,{children:[\"In this example we're creating a new section setting which has the \",(0,n.jsx)(e.code,{children:\"ID\"}),\" of \",(0,n.jsx)(e.code,{children:\"title\"}),\" (that we'll reference as a Liquid object inside a HTML element), an input setting \",(0,n.jsx)(e.code,{children:\"type\"}),\" of \",(0,n.jsx)(e.code,{children:\"text\"}),\", a \",(0,n.jsx)(e.code,{children:\"label\"}),\" which appears on the theme editor, and a \",(0,n.jsx)(e.code,{children:\"default\"}),\" placeholder value.\"]}),(0,n.jsxs)(e.p,{children:[\"Because section settings are defined within the schema, the settings can be accessed as Liquid objects using the syntax of \",(0,n.jsx)(e.code,{children:\"section.settings.ID\"}),\". In the case of the title text settings we've just created, we'll reference it using its' \",(0,n.jsx)(e.code,{children:\"ID\"}),\" of \",(0,n.jsx)(e.code,{children:\"title\"}),\", as a section setting Liquid object that's wrapped in a H2 element. We can add this above the opening \",(0,n.jsx)(e.code,{children:\"schema\"}),\" tags, at the top of the file:\"]}),(0,n.jsx)(e.pre,{children:(0,n.jsxs)(e.code,{className:\"hljs language-html\",children:[(0,n.jsxs)(e.span,{className:\"hljs-tag\",children:[\"\u003c\",(0,n.jsx)(e.span,{className:\"hljs-name\",children:\"h2\"}),\"\u003e\"]}),\"{{ section.settings.title }}\",(0,n.jsxs)(e.span,{className:\"hljs-tag\",children:[\"\u003c/\",(0,n.jsx)(e.span,{className:\"hljs-name\",children:\"h2\"}),\"\u003e\"]}),`\n\n{% schema %}\n  {\n    \"name\": \"Custom Content\",\n    \"settings\": [\n      {\n        \"type\": \"text\",\n        \"id\": \"title\",\n        \"label\": \"Custom content heading\",\n        \"default\": \"Title\"\n      }\n    ],\n    \"presets\": [\n      {\n        \"name\": \"Custom Content\"\n      }\n    ]\n  }\n{% endschema %}\n`]})}),(0,n.jsx)(e.p,{children:\"After this is saved, we can navigate back to the theme editor and add the section again to a page where we'll now see our title setting is appearing:\"}),(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"/content/images/learning-liquid/basic-section-settings.gif\",alt:\"basic-section-settings\"})}),(0,n.jsxs)(e.dl,{children:[(0,n.jsx)(e.dt,{children:\"Negative\"}),(0,n.jsxs)(e.dd,{children:[\"All section setting IDs must be unique within each section. Having duplicate IDs within a section will result in an error. You can learn more about how section settings are managed in \",(0,n.jsx)(e.a,{href:\"https://shopify.dev/themes/architecture/sections/section-schema#settings\",children:\"our developer documentation\"}),\".\"]})]})]})}),(0,n.jsx)(e.div,{className:\"workshop-step\",children:(0,n.jsxs)(e.section,{children:[(0,n.jsx)(e.h2,{id:\"4\",children:\"Adding a Custom Liquid block to our section\"}),(0,n.jsx)(e.p,{children:\"Now that we've a basic functional dynamic section, we can start adding block components for custom content.\"}),(0,n.jsxs)(e.p,{children:[\"Inside the sections' schema settings we can add a new \",(0,n.jsx)(e.code,{children:\"blocks\"}),\" array which contains a Liquid input setting:\"]}),(0,n.jsx)(e.pre,{children:(0,n.jsxs)(e.code,{className:\"hljs language-json\",children:[(0,n.jsx)(e.span,{className:\"hljs-attr\",children:'\"blocks\"'}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\"[\"}),`\n  `,(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\"{\"}),`\n    `,(0,n.jsx)(e.span,{className:\"hljs-attr\",children:'\"name\"'}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"hljs-string\",children:'\"Custom Liquid\"'}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\",\"}),`\n    `,(0,n.jsx)(e.span,{className:\"hljs-attr\",children:'\"type\"'}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"hljs-string\",children:'\"liquid\"'}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\",\"}),`\n    `,(0,n.jsx)(e.span,{className:\"hljs-attr\",children:'\"settings\"'}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\"[\"}),`\n      `,(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\"{\"}),`\n        `,(0,n.jsx)(e.span,{className:\"hljs-attr\",children:'\"type\"'}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"hljs-string\",children:'\"liquid\"'}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\",\"}),`\n        `,(0,n.jsx)(e.span,{className:\"hljs-attr\",children:'\"id\"'}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"hljs-string\",children:'\"liquid\"'}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\",\"}),`\n        `,(0,n.jsx)(e.span,{className:\"hljs-attr\",children:'\"label\"'}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"hljs-string\",children:'\"Custom Liquid\"'}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\",\"}),`\n        `,(0,n.jsx)(e.span,{className:\"hljs-attr\",children:'\"info\"'}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"hljs-string\",children:'\"Add Liquid code to create theme customizations.\"'}),`\n      `,(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\"}\"}),`\n    `,(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\"]\"}),`\n  `,(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\"}\"}),`\n`,(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\",\"}),`\n`]})}),(0,n.jsxs)(e.dl,{children:[(0,n.jsx)(e.dt,{children:\"Positive\"}),(0,n.jsxs)(e.dd,{children:[\"This \",(0,n.jsx)(e.a,{href:\"https://shopify.dev/themes/architecture/settings/input-settings#liquid\",children:\"Liquid input setting\"}),\" was released for Shopify Unite 2021 and allows merchants to add their own Liquid properties from within the theme editor. This input setting also accepts HTML elements which makes it even more flexible for merchants looking to enhance their store.\"]})]}),(0,n.jsxs)(e.p,{children:[\"As you can see, the structure for how blocks are defined is similar to how section settings are structured, with the \",(0,n.jsx)(e.code,{children:\"type\"}),\", \",(0,n.jsx)(e.code,{children:\"id\"}),\", \",(0,n.jsx)(e.code,{children:\"info\"}),\", and \",(0,n.jsx)(e.code,{children:\"label\"}),\" properties. After values are defined for these properties, we can reference the block as a Liquid object \",(0,n.jsx)(e.code,{children:\"block.settings.ID\"}),\". The block will also be accessible from within the section on the theme editor for merchants.\"]}),(0,n.jsxs)(e.p,{children:[\"In the markup of the section, just below where our H2 element is, we can include a \",(0,n.jsx)(e.a,{href:\"https://shopify.dev/api/liquid/objects#forloop\",children:(0,n.jsx)(e.code,{children:\"forloop\"})}),\" that renders blocks on a section, and references the new block ID we added.\"]}),(0,n.jsx)(e.pre,{children:(0,n.jsxs)(e.code,{className:\"hljs language-html\",children:[`{% for block in section.blocks %}\n  {% case block.type %}\n    {% when 'liquid' %}\n      `,(0,n.jsxs)(e.span,{className:\"hljs-tag\",children:[\"\u003c\",(0,n.jsx)(e.span,{className:\"hljs-name\",children:\"div\"}),\" {{ \",(0,n.jsx)(e.span,{className:\"hljs-attr\",children:\"block.shopify_attributes\"}),\" }}\u003e\"]}),`\n        {{ block.settings.liquid }}\n      `,(0,n.jsxs)(e.span,{className:\"hljs-tag\",children:[\"\u003c/\",(0,n.jsx)(e.span,{className:\"hljs-name\",children:\"div\"}),\"\u003e\"]}),`\n  {% endcase %}\n{% endfor %}\n`]})}),(0,n.jsxs)(e.dl,{children:[(0,n.jsx)(e.dt,{children:\"Positive\"}),(0,n.jsxs)(e.dd,{children:[\"The Liquid \",(0,n.jsx)(e.code,{children:\"for\"}),\" tag is used to render an expression for every item in an array. We call this type of tag an Iteration tag as it allow us to repeatedly run blocks of code. You can learn more about how Liquid tags are used in our \",(0,n.jsx)(e.a,{href:\"https://shopify.dev/api/liquid/tags#for\",children:\"developer documentation\"}),\".\"]})]}),(0,n.jsxs)(e.p,{children:[\"Inside this \",(0,n.jsx)(e.code,{children:\"forloop\"}),\" we'll use \",(0,n.jsx)(e.code,{children:\"case\"}),\" and \",(0,n.jsx)(e.code,{children:\"when\"}),\" control flow tags to render individual blocks. We can set up conditions that target the type of each block, and will output the markup when a merchant adds a certain block on the theme editor.\"]}),(0,n.jsxs)(e.p,{children:[\"Additionally, each block's content is included inside a parent container, and that container has \",(0,n.jsx)(e.code,{children:\"{{ block.shopify_attributes }}\"}),\" added as an attribute. Shopify's theme editor uses that attribute to identify blocks in its \",(0,n.jsx)(e.a,{href:\"https://shopify.dev/themes/architecture/sections/integrate-sections-with-the-theme-editor#javascript-events\",children:\"JavaScript API\"}),\".\"]}),(0,n.jsx)(e.p,{children:'When we navigate back to the theme editor we should see this new custom Liquid block appearing as an option when we select \"Add block\" on our custom content section.'}),(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"/content/images/learning-liquid/liquid-block.gif\",alt:\"liquid-block\"})}),(0,n.jsx)(e.p,{children:\"Next we'll add another custom content block.\"})]})}),(0,n.jsx)(e.div,{className:\"workshop-step\",children:(0,n.jsxs)(e.section,{children:[(0,n.jsx)(e.h2,{id:\"5\",children:\"Creating a custom text block\"}),(0,n.jsxs)(e.p,{children:[\"Following the same method where we added properties for our Liquid input setting, we'll add another instance for a custom text block inside the section schema. This code will be placed inside the \",(0,n.jsx)(e.code,{children:\"blocks\"}),\" array, below our existing custom Liquid block:\"]}),(0,n.jsx)(e.pre,{children:(0,n.jsxs)(e.code,{className:\"hljs language-json\",children:[(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\"{\"}),`\n  `,(0,n.jsx)(e.span,{className:\"hljs-attr\",children:'\"name\"'}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"hljs-string\",children:'\"Custom Text\"'}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\",\"}),`\n  `,(0,n.jsx)(e.span,{className:\"hljs-attr\",children:'\"type\"'}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"hljs-string\",children:'\"custom-text\"'}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\",\"}),`\n  `,(0,n.jsx)(e.span,{className:\"hljs-attr\",children:'\"settings\"'}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\"[\"}),`\n    `,(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\"{\"}),`\n      `,(0,n.jsx)(e.span,{className:\"hljs-attr\",children:'\"type\"'}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"hljs-string\",children:'\"textarea\"'}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\",\"}),`\n      `,(0,n.jsx)(e.span,{className:\"hljs-attr\",children:'\"id\"'}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"hljs-string\",children:'\"custom-text-field\"'}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\",\"}),`\n      `,(0,n.jsx)(e.span,{className:\"hljs-attr\",children:'\"label\"'}),(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"hljs-string\",children:'\"Text\"'}),`\n    `,(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\"}\"}),`\n  `,(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\"]\"}),`\n`,(0,n.jsx)(e.span,{className:\"hljs-punctuation\",children:\"}\"}),`\n`]})}),(0,n.jsxs)(e.p,{children:[\"Next we'll again need to create some HTML elements in the section file, above the schema, where we'll include this new block as a Liquid object. We can expand our existing conditional Liquid tags, by adding a new \",(0,n.jsx)(e.code,{children:\"when\"}),\" condition below the closing container tag for our Liquid block but above the \",(0,n.jsx)(e.code,{children:\"endcase\"}),\" tag:\"]}),(0,n.jsx)(e.pre,{children:(0,n.jsxs)(e.code,{className:\"hljs language-html\",children:[`{% when 'custom-text' %}\n  `,(0,n.jsxs)(e.span,{className:\"hljs-tag\",children:[\"\u003c\",(0,n.jsx)(e.span,{className:\"hljs-name\",children:\"div\"}),\" {{ \",(0,n.jsx)(e.span,{className:\"hljs-attr\",children:\"block.shopify_attributes\"}),\" }}\u003e\"]}),`\n    {{ block.settings.custom-text-field }}\n  `,(0,n.jsxs)(e.span,{className:\"hljs-tag\",children:[\"\u003c/\",(0,n.jsx)(e.span,{className:\"hljs-name\",children:\"div\"}),\"\u003e\"]}),`\n`]})}),(0,n.jsxs)(e.p,{children:[\"After this custom text block is added, the full \",(0,n.jsx)(e.code,{children:\"custom-content.liquid\"}),\" file should look like this:\"]}),(0,n.jsx)(e.pre,{children:(0,n.jsxs)(e.code,{className:\"hljs language-html\",children:[(0,n.jsxs)(e.span,{className:\"hljs-tag\",children:[\"\u003c\",(0,n.jsx)(e.span,{className:\"hljs-name\",children:\"h2\"}),\"\u003e\"]}),\"{{ section.settings.title }}\",(0,n.jsxs)(e.span,{className:\"hljs-tag\",children:[\"\u003c/\",(0,n.jsx)(e.span,{className:\"hljs-name\",children:\"h2\"}),\"\u003e\"]}),`\n\n{% for block in section.blocks %}\n  {% case block.type %}\n    {% when 'liquid' %}\n      `,(0,n.jsxs)(e.span,{className:\"hljs-tag\",children:[\"\u003c\",(0,n.jsx)(e.span,{className:\"hljs-name\",children:\"div\"}),\" {{ \",(0,n.jsx)(e.span,{className:\"hljs-attr\",children:\"block.shopify_attributes\"}),\" }}\u003e\"]}),`\n        {{ block.settings.liquid }}\n      `,(0,n.jsxs)(e.span,{className:\"hljs-tag\",children:[\"\u003c/\",(0,n.jsx)(e.span,{className:\"hljs-name\",children:\"div\"}),\"\u003e\"]}),`\n    {% when 'custom-text' %}\n      `,(0,n.jsxs)(e.span,{className:\"hljs-tag\",children:[\"\u003c\",(0,n.jsx)(e.span,{className:\"hljs-name\",children:\"div\"}),\" {{ \",(0,n.jsx)(e.span,{className:\"hljs-attr\",children:\"block.shopify_attributes\"}),\" }}\u003e\"]}),`\n        {{ block.settings.custom-text-field }}\n      `,(0,n.jsxs)(e.span,{className:\"hljs-tag\",children:[\"\u003c/\",(0,n.jsx)(e.span,{className:\"hljs-name\",children:\"div\"}),\"\u003e\"]}),`\n  {% endcase %}\n{% endfor %}\n\n{% schema %}\n  {\n    \"name\": \"Custom Content\",\n      \"settings\": [\n        {\n          \"type\": \"text\",\n          \"id\": \"title\",\n          \"label\": \"Custom content heading\",\n          \"default\": \"Title\"\n        }\n      ],\n      \"blocks\": [\n        {\n          \"name\": \"Custom Liquid\",\n          \"type\": \"liquid\",\n          \"settings\": [\n            {\n              \"type\": \"liquid\",\n              \"id\": \"liquid\",\n              \"label\": \"Custom Liquid\",\n              \"info\": \"Add Liquid code to create theme customizations.\"\n            }\n          ]\n        },\n        {\n          \"name\": \"Custom Text\",\n          \"type\": \"custom-text\",\n          \"settings\": [\n            {\n              \"type\": \"textarea\",\n              \"id\": \"custom-text-field\",\n              \"label\": \"Text\"\n            }\n          ]\n        }\n      ],\n      \"presets\": [\n        {\n          \"name\": \"Custom Content\"\n        }\n      ]\n  }\n{% endschema %}\n`]})}),(0,n.jsx)(e.p,{children:\"Now you can return to the theme editor and test that these three blocks are accessible and rendering correctly.\"}),(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"/content/images/learning-liquid/demo-of-blocks.gif\",alt:\"demo-of-blocks\"})})]})}),(0,n.jsx)(e.div,{className:\"workshop-step\",children:(0,n.jsxs)(e.section,{children:[(0,n.jsx)(e.h2,{id:\"6\",children:\"Testing the custom Liquid block on different pages\"}),(0,n.jsx)(e.p,{children:\"Now that we've two working blocks in our custom content section, let's test out some different scenarios where they can be used.\"}),(0,n.jsxs)(e.p,{children:[\"Unlike the \",(0,n.jsx)(e.code,{children:\"{{ template }}\"}),\" object, most Liquid objects are scoped to certain page resources. Depending on the content you already contain on your development store you can experiment with a range of Liquid objects on different pages. For example, add the custom content section to a collection, cart, or blog article page and see which objects are accessible in the custom Liquid block.\"]}),(0,n.jsx)(e.p,{children:\"Example:\"}),(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"hljs language-html\",children:`{{ article.author }}\n{{ cart.total_price }}\n{{ collection.description }}\n`})}),(0,n.jsxs)(e.p,{children:[\"Test this out with other examples that you can locate on the \",(0,n.jsx)(e.a,{href:\"https://shopify.dev/api/liquid/objects\",children:\"Liquid API documentation\"}),\".\"]})]})}),(0,n.jsx)(e.div,{className:\"workshop-step\",children:(0,n.jsxs)(e.section,{children:[(0,n.jsx)(e.h2,{id:\"7\",children:\"Displaying product tags via the custom Liquid block\"}),(0,n.jsxs)(e.p,{children:[\"Add the custom content section to a product page, and add the custom Liquid block. Inside the custom Liquid block copy and paste the following \",(0,n.jsx)(e.code,{children:\"forloop\"}),\" that iterates over a products' tags and outputs them as individual elements:\"]}),(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"hljs language-html\",children:`{% for tag in product.tags %}\n  {{ tag }}\n{% endfor %}\n`})}),(0,n.jsx)(e.p,{children:\"You should now see each of the tags appearing on your product page:\"}),(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"/content/images/learning-liquid/product-tags-forloop.gif\",alt:\"product-tags-forloop\"})}),(0,n.jsxs)(e.p,{children:[\"Now that you have your tags appearing as individual items you can go one step further and create clickable links that direct users to other products that share the same tags. By default Shopify stores can display a collection page with products that contain a certain tag at the URL \",(0,n.jsx)(e.code,{children:\"https://store-name.myshopify.com/collections/all/tag-name\"}),\".\"]}),(0,n.jsx)(e.p,{children:\"Because the Liquid input setting also accepts HTML, you can enhance this block to create an unordered list where each tag is a line item with a hyperlink that directs to a collection page containing products that share the specified tag. This would appear as:\"}),(0,n.jsx)(e.pre,{children:(0,n.jsxs)(e.code,{className:\"hljs language-html\",children:[(0,n.jsxs)(e.span,{className:\"hljs-tag\",children:[\"\u003c\",(0,n.jsx)(e.span,{className:\"hljs-name\",children:\"ul\"}),\"\u003e\"]}),`\n  {% for tag in product.tags %}\n  `,(0,n.jsxs)(e.span,{className:\"hljs-tag\",children:[\"\u003c\",(0,n.jsx)(e.span,{className:\"hljs-name\",children:\"li\"}),\"\u003e\"]}),`\n    `,(0,n.jsxs)(e.span,{className:\"hljs-tag\",children:[\"\u003c\",(0,n.jsx)(e.span,{className:\"hljs-name\",children:\"a\"}),\" \",(0,n.jsx)(e.span,{className:\"hljs-attr\",children:\"href\"}),\"=\",(0,n.jsx)(e.span,{className:\"hljs-string\",children:'\"/collections/all/{{ tag }}\"'}),\"\u003e\"]}),\"{{ tag }}\",(0,n.jsxs)(e.span,{className:\"hljs-tag\",children:[\"\u003c/\",(0,n.jsx)(e.span,{className:\"hljs-name\",children:\"a\"}),\"\u003e\"]}),`\n  `,(0,n.jsxs)(e.span,{className:\"hljs-tag\",children:[\"\u003c/\",(0,n.jsx)(e.span,{className:\"hljs-name\",children:\"li\"}),\"\u003e\"]}),`\n  {% endfor %}\n`,(0,n.jsxs)(e.span,{className:\"hljs-tag\",children:[\"\u003c/\",(0,n.jsx)(e.span,{className:\"hljs-name\",children:\"ul\"}),\"\u003e\"]}),`\n`]})}),(0,n.jsx)(e.p,{children:\"After you have updated the component with the HTML elements you can test out if the tags are now clickable links that direct users to collection pages.\"}),(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"/content/images/learning-liquid/product-tags-list.gif\",alt:\"product-tags-list\"})})]})}),(0,n.jsx)(e.div,{className:\"workshop-step\",children:(0,n.jsxs)(e.section,{children:[(0,n.jsx)(e.h2,{id:\"8\",children:\"Displaying metafields via the custom Liquid block\"}),(0,n.jsx)(e.p,{children:\"Metafields represent data that are associated with certain resources and can be displayed on individual pages. Because metafields are accessible in Liquid, it's possible to use metafields as values within the Liquid block we've created.\"}),(0,n.jsxs)(e.p,{children:[\"On the Shopify admin, navigate to Settings \u003e Metafields to create a single line text metafield for products, to display where a product was made, e.g.: \",(0,n.jsx)(e.code,{children:\"product.metafields.my_fields.country\"}),\". When you create a metafield you will define a namespace and a key (or name). In our example \",(0,n.jsx)(e.code,{children:\"my_fields\"}),\" would be the namespace and \",(0,n.jsx)(e.code,{children:\"country\"}),\" would be the key. The full metafield is also accessible as a Liquid object.\"]}),(0,n.jsx)(e.p,{children:\"After this metafield is defined, the you can assign values for this metafield to individual products, for example, if some products were made in Portugal, and some products made in Ireland. These can be assigned on the admin in the products area.\"}),(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"/content/images/optimized/learning-liquid/product-metafield.jpg\",alt:\"product-metafield\"})}),(0,n.jsx)(e.p,{children:\"Now we can use control flow tags to create an if statement that executes an action if a metafield's value is present. This statement will only be true if the currently viewed product contains a value for a specified metafield. If the metafield value isn't blank we can display our content. We can add this to our custom Liquid block as:\"}),(0,n.jsx)(e.pre,{children:(0,n.jsxs)(e.code,{className:\"hljs language-html\",children:[`{% if product.metafields.my_fields.country.value != blank %}\n  `,(0,n.jsxs)(e.span,{className:\"hljs-tag\",children:[\"\u003c\",(0,n.jsx)(e.span,{className:\"hljs-name\",children:\"p\"}),\"\u003e\"]}),\"Made in {{ product.metafields.my_fields.country.value }}\",(0,n.jsxs)(e.span,{className:\"hljs-tag\",children:[\"\u003c/\",(0,n.jsx)(e.span,{className:\"hljs-name\",children:\"p\"}),\"\u003e\"]}),`\n{% endif %}\n`]})}),(0,n.jsxs)(e.p,{children:['Now \"Made in ',(0,n.jsx)(e.strong,{children:\"_\"}),`\" will appear on product pages that contain a value for the country metafield, but we won't see an empty \"Made in\" on product pages which don't have a country value.`]}),(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"/content/images/learning-liquid/metafields-demo.gif\",alt:\"metafields-demo\"})})]})}),(0,n.jsx)(e.div,{className:\"workshop-step\",children:(0,n.jsxs)(e.section,{children:[(0,n.jsx)(e.h2,{id:\"9\",children:\"Pushing changes up to a live Shopify store\"}),(0,n.jsx)(e.p,{children:\"Now that you've made some customizations to the local version of your theme, let's push those changes to your live development store.\"}),(0,n.jsxs)(e.p,{children:[\"In terminal, close the server by pressing \",(0,n.jsx)(e.code,{children:\"Ctrl + c\"}),\" and run \",(0,n.jsx)(e.code,{children:\"shopify theme push\"}),\". You'll be prompted to select a theme to push to. Select an unpublished theme if you have one available. After the process has completed you can confirm the theme was pushed successfully by checking the theme in the theme editor.\"]}),(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"/content/images/optimized/learning-liquid/theme-push.jpg\",alt:\"theme-push\"})})]})}),(0,n.jsx)(e.div,{className:\"workshop-step\",children:(0,n.jsxs)(e.section,{children:[(0,n.jsx)(e.h2,{id:\"10\",children:\"Conclusion\"}),(0,n.jsx)(e.p,{children:\"Congratulations! You have now successfully set up a theme development environment and customized an existing theme. Let's quickly recap what you learned in this tutorial:\"}),(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"You can enhance themes by creating new sections that can be customized from the theme editor.\"}),`\n`,(0,n.jsx)(e.li,{children:\"Section blocks can be used to create new modules of content within sections.\"}),`\n`,(0,n.jsx)(e.li,{children:\"Liquid is very versatile and can be used to create new functionality for merchants.\"}),`\n`]}),(0,n.jsxs)(e.p,{children:[\"We can't wait to see what else you will build! We also invite you to come and join our \",(0,n.jsx)(e.a,{href:\"https://discord.com/invite/shopifydevs\",children:\"Discord server\"}),\" where you can meet fellow Shopify developers, ask questions or just hangout. See you there!\"]}),(0,n.jsxs)(e.dl,{children:[(0,n.jsx)(e.dt,{children:\"Positive\"}),(0,n.jsxs)(e.dd,{children:[\"To view a completed theme for this workshop, check out \",(0,n.jsx)(e.a,{href:\"https://github.com/Shopify/unite-workshop-learning-liquid\",children:\"this repo\"}),\".\"]})]})]})})]})]})}function v(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(d,t)})):d(t)}var k=v;function r(t,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+t+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return b(q);})();\n;return Component;","frontmatter":{"summary":"Make customizations to Shopify themes using Liquid and create a new custom content section.","id":"learning-liquid","status":"Published","feedback-link":"https://github.com/Shopify/workshops","categories":"liquid","title":"Getting started with Liquid and Theme Sections"},"trackingEnabled":true},"routes/workshops":null},"actionData":null,"errors":null},"future":{"v2_dev":false,"unstable_postcss":false,"unstable_tailwind":false,"v2_errorBoundary":false,"v2_headers":false,"v2_meta":false,"v2_normalizeFormMethod":false,"v2_routeConvention":false}};</script><script type="module" async="">import "/build/manifest-0FD511F1.js";
import * as route0 from "/build/root-TS7GWK7I.js";
import * as route1 from "/build/routes/workshops-YWZAAF22.js";
import * as route2 from "/build/routes/workshops/$workshopId-TCVFMZD7.js";
window.__remixRouteModules = {"root":route0,"routes/workshops":route1,"routes/workshops/$workshopId":route2};

import("/build/entry.client-J6TYPMOL.js");</script></body></html>